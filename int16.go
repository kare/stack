// Code generated by "gends"; DO NOT EDIT.

package stack // import "kkn.fi/stack"

// Int16Stack is a stack data structure.
type Int16Stack []int16

// NewInt16 creates an empty int16 stack.
func NewInt16() *Int16Stack {
	return &Int16Stack{}
}

// Push a value to stack
func (s *Int16Stack) Push(value int16) {
	(*s) = append([]int16{value}, (*s)...)
}

// Pop removes the most recently added item
func (s *Int16Stack) Pop() int16 {
	value := (*s)[0]
	(*s) = (*s)[1:]
	return value
}

// Slice returns the stack contents as an int16 slice.
func (s *Int16Stack) Slice() []int16 {
	return []int16(*s)
}

// Peek returns the most recently added item.
func (s *Int16Stack) Peek() int16 {
	return (*s)[0]
}

// IsEmpty returns true if the stack is empty.
func (s *Int16Stack) IsEmpty() bool {
	return len(*s) == 0
}

// Len returns the number of items in the stack.
func (s *Int16Stack) Len() int {
	return len(*s)
}
