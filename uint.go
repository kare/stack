// Code generated by "gends"; DO NOT EDIT.

package stack // import "kkn.fi/stack"

// UintStack is a stack data structure.
type UintStack []uint

// NewUint creates an empty uint stack.
func NewUint() *UintStack {
	return &UintStack{}
}

// Push a value to stack
func (s *UintStack) Push(value uint) {
	(*s) = append([]uint{value}, (*s)...)
}

// Pop removes the most recently added item
func (s *UintStack) Pop() uint {
	value := (*s)[0]
	(*s) = (*s)[1:]
	return value
}

// Slice returns the stack contents as an uint slice.
func (s *UintStack) Slice() []uint {
	return []uint(*s)
}

// Peek returns the most recently added item.
func (s *UintStack) Peek() uint {
	return (*s)[0]
}

// IsEmpty returns true if the stack is empty.
func (s *UintStack) IsEmpty() bool {
	return len(*s) == 0
}

// Len returns the number of items in the stack.
func (s *UintStack) Len() int {
	return len(*s)
}
