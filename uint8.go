// Code generated by "gends"; DO NOT EDIT.

package stack // import "kkn.fi/stack"

// Uint8Stack is a stack data structure.
type Uint8Stack []uint8

// NewUint8 creates an empty uint8 stack.
func NewUint8() *Uint8Stack {
	return &Uint8Stack{}
}

// Push a value to stack
func (s *Uint8Stack) Push(value uint8) {
	(*s) = append([]uint8{value}, (*s)...)
}

// Pop removes the most recently added item
func (s *Uint8Stack) Pop() uint8 {
	value := (*s)[0]
	(*s) = (*s)[1:]
	return value
}

// Slice returns the stack contents as an uint8 slice.
func (s *Uint8Stack) Slice() []uint8 {
	return []uint8(*s)
}

// Peek returns the most recently added item.
func (s *Uint8Stack) Peek() uint8 {
	return (*s)[0]
}

// IsEmpty returns true if the stack is empty.
func (s *Uint8Stack) IsEmpty() bool {
	return len(*s) == 0
}

// Len returns the number of items in the stack.
func (s *Uint8Stack) Len() int {
	return len(*s)
}
