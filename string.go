// Code generated by "gends"; DO NOT EDIT.

package stack // import "kkn.fi/stack"

// StringStack is a stack data structure.
type StringStack []string

// NewString creates an empty string stack.
func NewString() *StringStack {
	return &StringStack{}
}

// Push a value to stack
func (s *StringStack) Push(value string) {
	(*s) = append([]string{value}, (*s)...)
}

// Pop removes the most recently added item
func (s *StringStack) Pop() string {
	value := (*s)[0]
	(*s) = (*s)[1:]
	return value
}

// Slice returns the stack contents as an string slice.
func (s *StringStack) Slice() []string {
	return []string(*s)
}

// Peek returns the most recently added item.
func (s *StringStack) Peek() string {
	return (*s)[0]
}

// IsEmpty returns true if the stack is empty.
func (s *StringStack) IsEmpty() bool {
	return len(*s) == 0
}

// Len returns the number of items in the stack.
func (s *StringStack) Len() int {
	return len(*s)
}
